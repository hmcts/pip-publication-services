<policies>
  <inbound>
    <base />
    <cache-lookup-value key="pipPubServicesAuth" variable-name="pipAuthToken" />
    <choose>
      <when condition="@(context.Variables.GetValueOrDefault("pipAuthToken", "") == "")">
        <send-request ignore-error="false" timeout="20" response-variable-name="pipApimClientSecret" mode="new">
          <set-url>https://pip-ss-kv-{ENV}.vault.azure.net/secrets/app-pip-apim-admin-pwd/?api-version=7.0</set-url>
          <set-method>GET</set-method>
          <authentication-managed-identity resource="https://vault.azure.net" />
        </send-request>
        <set-variable name="clientSecret" value="@{
          var secret = ((IResponse)context.Variables["pipApimClientSecret"]).Body.As<JObject>();
          return secret["value"].ToString();
        }" />
        <send-request ignore-error="false" timeout="20" response-variable-name="pipPublicationServicesScope" mode="new">
          <set-url>https://pip-ss-kv-{ENV}.vault.azure.net/secrets/app-pip-publication-services-scope/?api-version=7.0</set-url>
          <set-method>GET</set-method>
          <authentication-managed-identity resource="https://vault.azure.net" />
        </send-request>
        <set-variable name="scope" value="@{
          var secret = ((IResponse)context.Variables["pipPublicationServicesScope"]).Body.As<JObject>();
          return secret["value"].ToString();
        }" />
        <send-request ignore-error="true" timeout="20" response-variable-name="bearerToken" mode="new">
          <set-url>https://login.microsoftonline.com/{TENANT_ID}/oauth2/v2.0/token</set-url>
          <set-method>POST</set-method>
          <set-header name="Content-Type" exists-action="override">
            <value>application/x-www-form-urlencoded</value>
          </set-header>
          <set-body>@{
            return "client_id=" + (string)context.Variables["clientId"] + "&scope=" + (string)context.Variables["scope"] + "/.default&client_secret=" + (string)context.Variables["clientSecret"] + "&grant_type=client_credentials";
          }</set-body>
        </send-request>
        <set-variable name="pipAuthToken" value="@("Bearer " + (String)((IResponse)context.Variables["bearerToken"]).Body.As<JObject>()["access_token"])" />
        <cache-store-value key="pipPubServicesAuth" value="@((String)context.Variables["pipAuthToken"])" duration="2700" />
      </when>
    </choose>
    <set-header name="Authorization" exists-action="override">
      <value>@((String)context.Variables["pipAuthToken"])</value>
    </set-header>
  </inbound>
  <backend>
    <base />
  </backend>
  <outbound>
    <base />
    <choose>
      <when condition="@(context.Response.StatusCode == 401)">
        <cache-remove-value key="pipPubServicesAuth" />
        <return-response>
          <set-status code="502" />
          <set-header name="Content-Type">
            <value>application/json</value>
          </set-header>
          <set-body>@{
            return new JObject(
              new JProperty("message", "Successfully authenticated by SDS PIP APIM, however target system failed to authenticate. Please try again.")
            ).ToString();
          }</set-body>
        </return-response>
      </when>
      <when condition="@(context.Response.StatusCode == 403)">
        <cache-remove-value key="pipPubServicesAuth" />
        <return-response>
          <set-status code="502" />
          <set-header name="Content-Type">
            <value>application/json</value>
          </set-header>
          <set-body>@{
            return new JObject(
              new JProperty("message", "Successfully authorised by SDS PIP APIM, however target system failed to authorise. Please try again.")
            ).ToString();
          }</set-body>
        </return-response>
      </when>
    </choose>
  </outbound>
  <on-error>
    <base />
  </on-error>
</policies>
